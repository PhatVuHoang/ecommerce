openapi: 3.0.0
info:
  title: ECOMMERCE - NODEJS
  version: 1.0.0
servers:
  - url: http://localhost:3000/v1/api
tags:
  - name: authentication
  - name: product
  - name: discount
security:
  - x-api-key: []

paths:
  /authentication/signup:
    post:
      tags:
        - authentication
      summary: Sign up a shop
      operationId: signup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignUpRequest"
        required: true
      responses:
        "201":
          description: Sign up success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "registered success"
                  status:
                    type: number
                    example: 201
                  metadata:
                    $ref: "#/components/schemas/SignUpResponse"
  /authentication/login:
    post:
      tags:
        - authentication
      summary: Login a shop
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
        required: true
      responses:
        "200":
          description: Login success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "login success"
                  status:
                    type: number
                    example: 200
                  metadata:
                    $ref: "#/components/schemas/LoginResponse"
  /authentication/logout:
    post:
      tags:
        - authentication
      summary: Logout a shop
      operationId: logout
      security:
        - BearerAuth: []
        - x-api-key: []
      parameters:
        - name: x-client-id
          in: header
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Logout success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "logout success"
                  status:
                    type: number
                    example: 200
                  metadata:
                    $ref: "#/components/schemas/LogoutResponse"
  /authentication/refresh-token:
    post:
      tags:
        - authentication
      summary: Get a new access token and refresh token
      operationId: refreshToken
      parameters:
        - name: x-rtoken
          in: header
          required: true
          schema:
            type: string
        - name: x-client-id
          in: header
          required: true
          schema:
            type: string
      responses:
        "201":
          description: Get token success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Get token success
                  status:
                    type: number
                    example: 201
                  metadata:
                    $ref: "#/components/schemas/RefreshTokenResponse"
  /product:
    post:
      tags:
        - product
      summary: create a product
      operationId: createProduct
      parameters:
        - name: x-client-id
          in: header
          schema:
            type: string
          required: true

      security:
        - BearerAuth: []
        - x-api-key: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductRequest"
      responses:
        "201":
          description: Create product success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Create product success
                  status:
                    type: number
                    example: 201
                  metadata:
                    $ref: "#/components/schemas/CreateProductResponse"
    get:
      tags:
        - "product"
      summary: get all product
      operationId: getAllProduct
      parameters:
        - name: page
          in: query
          schema:
            type: number
            default: 1
          required: true
        - name: limit
          in: query
          schema:
            type: number
            default: 50
          required: true
      responses:
        "200":
          description: Get list products success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Get list products success
                  status:
                    type: number
                    example: 200
                  metadata:
                    type: array
                    items:
                      $ref: "#/components/schemas/GetAllProductResponse"
                  options:
                    type: object
                    properties:
                      total:
                        type: number
  /product/publish/{id}:
    post:
      tags:
        - product
      summary: Publish product
      operationId: publishProduct
      parameters:
        - name: x-client-id
          in: header
          schema:
            type: string
          required: true
        - name: id
          in: path
          required: true
          schema:
            type: string
      security:
        - BearerAuth: []
        - x-api-key: []
      responses:
        "200":
          description: Publish product success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Publish product success
                  status:
                    type: number
                    example: 200
                  metadata:
                    type: number
                    example: 1
  /product/unPublish/{id}:
    post:
      tags:
        - product
      summary: Unpublish product
      operationId: unpublishProduct
      parameters:
        - name: x-client-id
          in: header
          schema:
            type: string
          required: true
        - name: id
          in: path
          required: true
          schema:
            type: string
      security:
        - BearerAuth: []
        - x-api-key: []
      responses:
        "200":
          description: Unpublish product success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unpublish product success
                  status:
                    type: number
                    example: 200
                  metadata:
                    type: number
                    example: 1
  /product/{id}:
    patch:
      tags:
        - product
      summary: update a product
      operationId: updateProduct
      parameters:
        - name: x-client-id
          in: header
          schema:
            type: string
          required: true
        - name: id
          in: path
          schema:
            type: string
          required: true

      security:
        - BearerAuth: []
        - x-api-key: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductRequest"
      responses:
        "201":
          description: update product success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: update product success
                  status:
                    type: number
                    example: 201
                  metadata:
                    $ref: "#/components/schemas/CreateProductResponse"
    get:
      tags:
        - "product"
      summary: get product
      operationId: getProduct
      parameters:
        - name: page
          in: query
          schema:
            type: number
            default: 1
          required: true
        - name: limit
          in: query
          schema:
            type: number
            default: 50
          required: true
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get product success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Get product success
                  status:
                    type: number
                    example: 200
                  metadata:
                    $ref: "#/components/schemas/ProductResponse"
  /product/publish:
    get:
      tags:
        - product
      summary: Get publish products
      operationId: getPublishProducts
      parameters:
        - name: x-client-id
          in: header
          schema:
            type: string
          required: true
      security:
        - BearerAuth: []
        - x-api-key: []
      responses:
        "200":
          description: Get list success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Get list success
                  status:
                    type: number
                    example: 200
                  metadata:
                    type: array
                    items:
                      $ref: "#/components/schemas/ProductResponse"
                  options:
                    type: object
                    properties:
                      total:
                        type: number
  /product/draft:
    get:
      tags:
        - product
      summary: Get draft products
      operationId: getDraftProducts
      parameters:
        - name: x-client-id
          in: header
          schema:
            type: string
          required: true
      security:
        - BearerAuth: []
        - x-api-key: []
      responses:
        "200":
          description: Get list success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Get list success
                  status:
                    type: number
                    example: 200
                  metadata:
                    type: array
                    items:
                      $ref: "#/components/schemas/ProductResponse"
                  options:
                    type: object
                    properties:
                      total:
                        type: number
  /product/search:
    get:
      tags:
        - "product"
      summary: search product
      operationId: searchProduct
      parameters:
        - name: keySearch
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: number
            default: 1
          required: true
        - name: limit
          in: query
          schema:
            type: number
            default: 50
          required: true
      responses:
        "200":
          description: Get list products success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Get list products success
                  status:
                    type: number
                    example: 200
                  metadata:
                    type: array
                    items:
                      $ref: "#/components/schemas/ProductResponse"
                  options:
                    type: object
                    properties:
                      total:
                        type: number
  /discount:
    post:
      tags:
        - discount
      summary: Create a discount code
      operationId: createDiscount
      security:
        - BearerAuth: []
        - x-api-key: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDiscountRequest"
      parameters:
        - name: x-client-id
          in: header
          schema:
            type: string
          required: true
      responses:
        "201":
          description: Create a new discount success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Create a new discount success
                  status:
                    type: number
                    example: 201
                  metadata:
                    $ref: "#/components/schemas/CreateProductResponse"
    get:
      tags:
        - discount
      summary: Get all discount code for shop
      operationId: getDiscountCodeByShop
      security:
        - BearerAuth: []
        - x-api-key: []
      parameters:
        - name: x-client-id
          in: header
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Get all discount code success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Get all discount code success
                  status:
                    type: number
                    example: 200
                  metadata:
                    type: array
                    items:
                      $ref: "#/components/schemas/GetAllDiscountCodesByShopResponse"
  /discount/list-product-code:
    get:
      tags:
        - discount
      summary: Get all discount code with product
      operationId: getAllDiscountCodeWithProduct
      parameters:
        - name: shopId
          in: query
          schema:
            type: string
          required: true
        - name: code
          in: query
          schema:
            type: string
          required: true
        - name: page
          in: query
          schema:
            type: number
            default: 1
          required: true
        - name: limit
          in: query
          schema:
            type: number
            default: 50
          required: true
      responses:
        "200":
          description: Get all discount code success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Get all discount code success
                  status:
                    type: number
                    example: 200
                  metadata:
                    type: array
                    items:
                      $ref: "#/components/schemas/getAllDiscountCodeWithProduct"
  /discount/amount:
    get:
      tags:
        - discount
      summary: Get discount amount
      operationId: getDiscountAmount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                userId:
                  type: number
                shopId:
                  type: string
                product:
                  type: array
                  items:
                    type: object
                    properties:
                      productId:
                        type: string
                      quantity:
                        type: number
                      price:
                        type: number
      responses:
        "200":
          description: Get discount amount success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Get discount amount success
                  status:
                    type: number
                    example: 200
                  metadata:
                    $ref: "#/components/schemas/GetDiscountAmountResponse"

components:
  schemas:
    SignUpRequest:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
    SignUpResponse:
      type: object
      properties:
        shop:
          type: object
          properties:
            _id:
              type: string
            name:
              type: string
            email:
              type: string
        tokens:
          type: object
          properties:
            accessToken:
              type: string
            refreshToken:
              type: string
    LoginRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    LoginResponse:
      properties:
        shop:
          type: object
          properties:
            _id:
              type: string
            name:
              type: string
            email:
              type: string
        tokens:
          type: object
          properties:
            accessToken:
              type: string
            refreshToken:
              type: string
    LogoutResponse:
      properties:
        acknowledged:
          type: boolean
        deletedCount:
          type: number
    RefreshTokenResponse:
      type: object
      properties:
        user:
          type: object
          properties:
            userId:
              type: string
            email:
              type: string
        tokens:
          type: object
          properties:
            accessToken:
              type: string
            refreshToken:
              type: string
    ProductAttribute:
      type: object
      properties:
        brand:
          type: string
        size:
          type: string
        material:
          type: string
    ProductRequest:
      type: object
      properties:
        productName:
          type: string
        productDescription:
          type: string
        productPrice:
          type: number
        productType:
          $ref: "#/components/schemas/ProductType"
        productThumb:
          type: string
        productQuantity:
          type: number
        productAttributes:
          $ref: "#/components/schemas/ProductAttribute"
    CreateProductResponse:
      type: object
      properties:
        productName:
          type: string
        productThumb:
          type: string
        productDescription:
          type: string
        productPrice:
          type: number
        productQuantity:
          type: number
        productType:
          type: string
        productShop:
          type: string
        productAttributes:
          type: object
          properties:
            brand:
              type: string
            size:
              type: string
            material:
              type: string
        productRatingsAverage:
          type: number
        productVariation:
          type: array
        isDraft:
          type: boolean
        isPublish:
          type: boolean
        _id:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        productSlug:
          type: string
    ProductResponse:
      type: object
      properties:
        _id:
          type: string
        productName:
          type: string
        productThumb:
          type: string
          format: uri
        productDescription:
          type: string
        productPrice:
          type: number
        productQuantity:
          type: number
        productType:
          $ref: "#/components/schemas/ProductType"
        productShop:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
        productAttributes:
          type: object
          properties:
            brand:
              type: string
            size:
              type: string
            material:
              type: string
        productRatingsAverage:
          type: number
          format: float
        productVariation:
          type: array
          items: {}
        createdAt:
          type: string
          format: date-time
          example: "2024-01-08T07:42:38.468Z"
        updatedAt:
          type: string
          format: date-time
          example: "2024-01-09T10:04:37.314Z"
        productSlug:
          type: string
    ProductType:
      type: string
      enum:
        - Clothing
        - Electronic
        - Furniture
    CreateDiscountRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        type:
          type: string
          enum:
            - fixed_amount
            - percentage
        value:
          type: number
        maxValue:
          type: number
        code:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        maxUses:
          type: number
        usedCount:
          type: number
        userUsed:
          type: array
          items: {}
        maxUsePerUser:
          type: number
        minOrderValue:
          type: number
        isActive:
          type: boolean
        applyTo:
          type: string
          enum:
            - all
            - specific
          default: specific
        productId:
          type: array
          items:
            type: string
    CreateDiscountResponse:
      type: object
      properties:
        discountName:
          type: string
        discountDescription:
          type: string
        discountType:
          type: string
          enum:
            - fixed_amount
            - percentage
        discountValue:
          type: number
        discountMaxValue:
          type: number
        discountCode:
          type: string
        discountStartDate:
          type: string
          format: date-time
        discountEndDate:
          type: string
          format: date-time
        discountMaxUses:
          type: number
        discountUsedCount:
          type: number
        discountUsersUsed:
          type: array
          items:
            type: string
        discountMaxUsePerUser:
          type: number
        discountMinOrderValue:
          type: number
        discountShopId:
          type: string
        discountIsActive:
          type: boolean
        discountApplyTo:
          type: string
          enum:
            - all
            - specific
        discountProductIds:
          type: array
          items:
            type: string
        _id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        __v:
          type: number
    GetAllDiscountCodesByShopResponse:
      type: object
      properties:
        _id:
          type: string
        discountName:
          type: string
        discountDescription:
          type: string
        discountType:
          type: string
          enum:
            - percentage
            - fixed_amount
        discountValue:
          type: number
        discountMaxValue:
          type: number
        discountCode:
          type: string
        discountStartDate:
          type: string
          format: date-time
        discountEndDate:
          type: string
          format: date-time
        discountMaxUses:
          type: number
        discountUsedCount:
          type: number
        discountUsersUsed:
          type: array
          items:
            type: string
        discountMaxUsePerUser:
          type: number
        discountMinOrderValue:
          type: number
        discountIsActive:
          type: boolean
        discountApplyTo:
          type: string
        discountProductIds:
          type: array
          items:
            type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    getAllDiscountCodeWithProduct:
      type: object
      properties:
        _id:
          type: string
        productName:
          type: string
    GetDiscountAmountResponse:
      type: object
      properties:
        totalOrder:
          type: number
        discount:
          type: number
        totalPrice:
          type: number
    GetAllProductResponse:
      type: object
      properties:
        _id:
          type: string
        productName:
          type: string
        productThumb:
          type: string
        productPrice:
          type: number

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    x-api-key:
      type: apiKey
      name: x-api-key
      in: header
